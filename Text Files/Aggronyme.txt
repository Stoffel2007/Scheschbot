Buchstb Adjektiv                        Nomen
A       abartig, assozial               (die)Arschkuh, (die)Annegrett,
Ä       ägglhaft,
B       balanzelos,                     (der)Blödman
C       charismatisch,
D       deppert, dumm
E       egglhaft, ersetzbar,            (der)Exmatrikulator
F       frauenfeindlich
H       hochnäsig
I       idiotisch, ignorant
J       joggend
K       kannibalistisch                 (der)Kevin, (der)Klaun
L       lieblos,
M       mickrig,                        das Monokel
N       nebulös,
O       oval,                           der Obatzn, die Orange, das Omen, (der)Oachkotzenschwoaf
Ö       öde,                            (der)Önner, (der)Öter,
P       phasenverschoben,
Q       qualifiziert,
R       respektlos
S       scheiß, schwach, schlecht       (die)Sauklau, (der)Schwachkupf, (der)Schmock, (der)Massakermanfred
T       transatlantisch,                (der)Taliban
U       unterirdisch
Ü       überlebenswichtig,
V       verflucht,                      (das)Versuchskaninchen
W       weißer,
X       x-beliebig                      (der)Xenomorph, (der)Xeroxpapierfresser
Y       yuppi verachtend                (der)Yuppie
Z


"Aggronyme" - Kommandofuktion /aggro {Vorname Nachname}

    Beschreibung:
    diese Funktion wandelt einen Namen als Akronym in eine Beleidigung/Beschreibung um

    Beispiel:
    Timo: transatlantischer, idiotischer und mickriger Obatzn
    Timo Bett: transatlantischer, idiotischer und mickriger Obatzn SOWIE ...

    DB Struktur: siehe oben


    funktionen:


    - detect_words(command_text) - wandelt die Wörter/(Anzahl der Namen) im Text in x-dimens Array um
        return arr_words ([Timo]
                          [Schmidt])
    ### nicht mehr benötig, income_string.split() --> Array ein einzelnen Wörtern

    - detect_letters(arr_words) - wandelt arr_words in Array von Buchstaben um
        return arr_letters ([t,i,m,o]
                            [s,c,h,m,i,d,t])

    - get_insult(arr_letter):
            * schaut wie viele Einträge je eine Dimension des Arrays hat
            * holt für den Buchstaben alle Adjektive aus DB
            * sucht sich random ein aus
                *tue für (Xte-Dimension.length - 1)
            * letzter Buchstabe ist ein Nomen, hole Nomen, suche random aus
        return arr_insult ([transatlatisch, idiotisch, mikrieg, Obatzn]
                           [scheiß, ... , Taliban]

    - format_insult(arr_insult) - zusammen setzten des zu sendenden Strings
            * in der DB ist Nomen mit Artikel gespeichert
            * formatiere je nach Artikel die Adjektive zu er/e/es
                Beispiel: mikrieg -> mikrieger/mikriege/mikrieges
            * setzte Kommas, einfügen des "und" vor dem letzten Adj
            * (Optional) füge ein "Sowie", das gleiche für 2tes Wort, ...


HINT:
numrows = len(input)    # 3 rows in your example
numcols = len(input[0]) # 2 columns in your example


DB-Struktur:

CREATE TABLE IF NOT EXISTS scheschbot.aggronyme
(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    letter char(1) NOT NULL,
    adjective char(255) NOT NULL,
    noun CHAR(255) NOT NULL
)

DEFAULT CHARACTER SET = 'utf16';

INSERT INTO scheschbot.aggronyme
(letter, adjective, noun)
VALUES
('a', 'assozial, anarchistisch', '(der)Amputateur')
